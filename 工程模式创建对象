作用域
作用域：在程序中定义的变量或函数能够呗使用的范围
作用域：全局：在程序中的任何位置都可以被使用
作用域：局部：在程序的某个范围内可以使用
 
使用工厂模式创建对象，解决实例化对象产生大量重复问题
 例子“  function createObj(name,age)
      {
          var obj = new Object();
          obj.name = name;
          obj.age = age;
          obj.study=function () {
              alert("我叫"+this.name+"今年"+this.age+",我爱学习");

          };
          return obj;

      }
        var stu3 =createObj("张三",23);
        var stu4 =createObj("李四",22);
        stu3.study();
工厂模式的缺点：不能确定对象的具体类型  （存在识别问题）
  ECMAStript中采用构造函数来创建特定的对象
 例子：    function student(name ,age) {
       this.name=name;      //后台创建了new Object()
       this.age=age;        //This就指向了这个对象
       this.study=function () {
           alert(this.name+","+this.age);
       };                //后台返回了该对象
   }
        var stu1=new student("张三",23);
        stu1.study()
        //使用了构造函数的方法，和使用工厂模式的方法他们的不同之处如下：
        //1，构造函数方法没有显示的创建对象（new Object());
        //2,直接将属性和方法赋值给this对象；
        //3,没有return语句   
  构造函数的特点：
1：函数名首字母大写，为了和普通函数区分
2：使用构造函数必须使用new  备注：把构造函数当成普通函数调用没意义。 例如接上面函数： Student（“zhais”,40）//没意义
     例如接上面函数： 
                lert(stu1.study==stu2.study); //flase   study存储的是函数的引用   
